file "../Tests/TestFiles/EvenNumbers"
quit
file "../Tests/TestFiles/EvenNumbers"
quit
4
file "../Tests/TestFiles/Test1"
4
file "../Tests/TestFiles/Test1"
funcAdd args(5,6)
funcAdd = args(hello,there) {c = hello + there; print(c);}
funcAdd args(3,4)
funcAdd = args(b,a) {c = b + a; print(c);}
funcAdd args(2,3)
funcAdd = args(b,a) {c = b + a; print(a);}
funcAdd args(b,a) {c = b + a; print(a);}
funcAdd args(one,two) {a = one + two;print(a);}
funcAdd args(one,two) {a = one + two;print(a)}
quit
3
file "../Tests/TestFiles/Fib"
4
4
file "../Tests/TestFiles/Fib"
file "../Tests/TestFiles/Fib"
fib args(4)
fib = args(n) {tmp = 0;a=3;b=1;i=0;for(i;i<n;i=i+1) [tmp = a;a = 3 * a - b;b = tmp] }
file "../Tests/TestFiles/Fib"
file "../Tests/TestFiles/Fib"
quit
print a
x args(1,2,3)
x = args(a,b,c) {print(a);print(c);print(c)}
file "../Tests/TestFiles/FibonacciRecursion"
file "../Tests/TestFiles/FibonacciRecursion""
f args(4)
f = args(n) {if(n==0) r = 0;if(n==1) r = 1;if(n>1) r = (f args(n-1) + f args(n-2))}
x args(1,2,3)
x = args(a,b,c) {print(a);print(b);print(c)}
x args(1,2,3)
x = args(a,b,c) {print(a),print(b),print(c)}
fib args(2)
fib = args(n) {if(n==0) r = 0;if(n==1) r = 1;if(n>1) r = (fib args(n-1) + fib args(n-2))}
